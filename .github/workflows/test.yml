name: 🧪 Test
on:
  push:
jobs:
  test:
    strategy:
      matrix:
        os: [[🐧, Ubuntu], [🍎, macOS], [🪟, Windows]]
    name: ${{ matrix.os[0] }} Test ${{ matrix.os[1] }}
    runs-on: ${{ matrix.os[1] }}-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with: { go-version-file: go.mod }
      - name: Generate Platform List
        id: list
        uses: ./
      - name: Show Result
        run: echo '${{ steps.list.outputs.platforms }}'

  list:
    name: 📋 List Platforms
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.list.outputs.platforms }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with: { go-version-file: go.mod }
      - name: List First Class Platforms
        id: list
        uses: ./
        with:
          exclude-arch: wasm 386

  build:
    name: Build ${{ matrix.go.emoji }} ${{ matrix.go.GOOS }}/${{ matrix.go.GOARCH }}
    needs: list
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ${{ fromJson(needs.list.outputs.platforms) }}
    env:
      GOOS: ${{ matrix.go.GOOS }}
      GOARCH: ${{ matrix.go.GOARCH }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with: { go-version-file: go.mod }
      - name: Build
        run: go build -o my_app-${{ matrix.go.GOOS }}-${{ matrix.go.GOARCH }} cmd/my_app.go
        continue-on-error: ${{ !matrix.go.FirstClass }}
